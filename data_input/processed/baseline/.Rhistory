) %>% bind_rows()
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
.349 - .228
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width = 0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Baseline","Experimental"))+
scale_y_continuous(breaks = seq(-1,2.5,.5),
expand = c(0,0),
labels = every_nth(seq(-1,2.5,.5),2,T,F))+
expand_limits(y = c(-0.5,2.5)) +
scale_color_manual(name ="",values = col_param2,
labels=c("Baseline" = "Baseline","Experimental" = "Experimental"))+
scale_fill_manual(name ="",values = fill_param2,
labels = c("Baseline" = "Baseline","Experimental" = "Experimental"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P} || \\textit{Q})$'))
table(d$tr)
d[sort(d$tr), ]
d = d %>% na.omit()
table(d$tr)
sort(table(d$tr))
tab = table(d$tr) %>% as.data.frame()
tab[sort(tab$Freq), ]
barplot(tab)
barplot(tab$Freq)
barplot(tab$Freq, names.arg = tab$Var1)
tab[order(tab$Freq), ]
tab[order(-tab$Freq), ]
tab = tab[order(-tab$Freq), ]
tab$cum = cumsum(tab$Freq)
View(tab)
trials = tab[1:30, 1]
trials
class(trials)
trials = as.numeric(as.character(tab[1:30, 1]))
trials
d = d[d$tr %in% trials, ]
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width = 0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Baseline","Experimental"))+
scale_y_continuous(breaks = seq(-1,2.5,.5),
expand = c(0,0),
labels = every_nth(seq(-1,2.5,.5),2,T,F))+
expand_limits(y = c(-0.5,2.5)) +
scale_color_manual(name ="",values = col_param2,
labels=c("Baseline" = "Baseline","Experimental" = "Experimental"))+
scale_fill_manual(name ="",values = fill_param2,
labels = c("Baseline" = "Baseline","Experimental" = "Experimental"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P} || \\textit{Q})$'))
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
349-.228
.349-.228
kld_d = function(x,y,...){
integrand = function(x,y,t){
denx = density(x, na.rm = T)
deny = density(y, na.rm = T)
f.x =  approx(denx$x,denx$y,t)$y
f.y =  approx(deny$x,deny$y,t)$y
tmpRatio = f.x *(log2(f.x) - log2(f.y))
tmpRatio = ifelse(is.infinite(tmpRatio),0,ifelse(is.na(tmpRatio),0,tmpRatio))
tmpRatio
}
integrate(integrand,0,180,x = x,y = y,stop.on.error=FALSE)$value
}
d <- lapply(s_vector,function(k){
df.s <- df_2ph[df_2ph$sujeto == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph,function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 3 & lQ > 3){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(s = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
.305-.212
s_trials = unique(df_2ph$cum_trial)
d <- lapply(s_trials, function(k){
df.s <- df_2ph[df_2ph$cum_trial == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph, function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 3 & lQ > 3){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(tr = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
d = d %>% na.omit()
tab = table(d$tr) %>% as.data.frame()
tab = tab[order(-tab$Freq), ]
tab$cum = cumsum(tab$Freq)
trials = as.numeric(as.character(tab[1:30, 1]))
d = d[d$tr %in% trials, ]
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
0.329-0.214
kld_d = function(x,y,...){
Lmin = min(x,y)
Lsup = max(x,y)
integrand = function(x,y,t){
denx = density(x, na.rm = T)
deny = density(y, na.rm = T)
f.x =  approx(denx$x,denx$y,t)$y
f.y =  approx(deny$x,deny$y,t)$y
tmpRatio = f.x *(log2(f.x) - log2(f.y))
tmpRatio = ifelse(is.infinite(tmpRatio),0,ifelse(is.na(tmpRatio),0,tmpRatio))
tmpRatio
}
integrate(integrand,Lmin,Lsup,x = x,y = y,stop.on.error=FALSE)$value
}
s_trials = unique(df_2ph$cum_trial)
d <- lapply(s_trials, function(k){
df.s <- df_2ph[df_2ph$cum_trial == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph, function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 3 & lQ > 3){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(tr = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
d = d %>% na.omit()
tab = table(d$tr) %>% as.data.frame()
tab = tab[order(-tab$Freq), ]
tab$cum = cumsum(tab$Freq)
trials = as.numeric(as.character(tab[1:30, 1]))
d = d[d$tr %in% trials, ]
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
0.237-0.2
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width = 0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Baseline","Experimental"))+
scale_y_continuous(breaks = seq(-1,2.5,.5),
expand = c(0,0),
labels = every_nth(seq(-1,2.5,.5),2,T,F))+
expand_limits(y = c(-0.5,2.5)) +
scale_color_manual(name ="",values = col_param2,
labels=c("Baseline" = "Baseline","Experimental" = "Experimental"))+
scale_fill_manual(name ="",values = fill_param2,
labels = c("Baseline" = "Baseline","Experimental" = "Experimental"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P} || \\textit{Q})$'))
library(np)
kld_d = function(x,y,...) {
integrand = function(t,x,y){
f.x <- fitted(npudens(tdat=x,edat=t,bws=bw.SJ(x),...))  + 0.0000001
f.y <- fitted(npudens(tdat=y,edat=t,bws=bw.SJ(y),...))  + 0.0000001
tmpRatio = f.x *(log2(f.x) - log2(f.y))
# vecInf = is.infinite(tmpRatio) | is.na(tmpRatio)
#
# tmpRatio[vecInf] <- 0
tmpRatio
}
integrate(integrand,-Inf,Inf,x = x,y = y, stop.on.error=FALSE)$value
}
s_trials = unique(df_2ph$cum_trial)
d <- lapply(s_trials, function(k){
df.s <- df_2ph[df_2ph$cum_trial == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph, function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 3 & lQ > 3){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(tr = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
View(d)
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
0.579 - 0.403
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width = 0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Baseline","Experimental"))+
scale_y_continuous(breaks = seq(-1,2.5,.5),
expand = c(0,0),
labels = every_nth(seq(-1,2.5,.5),2,T,F))+
expand_limits(y = c(-0.5,2.5)) +
scale_color_manual(name ="",values = col_param2,
labels=c("Baseline" = "Baseline","Experimental" = "Experimental"))+
scale_fill_manual(name ="",values = fill_param2,
labels = c("Baseline" = "Baseline","Experimental" = "Experimental"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P} || \\textit{Q})$'))
kld_d = function(x,y,...) {
integrand = function(t,x,y){
f.x <- fitted(npudens(tdat=x,edat=t,bws=bw.SJ(x),...))  + 2
f.y <- fitted(npudens(tdat=y,edat=t,bws=bw.SJ(y),...))  + 2
tmpRatio = f.x *(log2(f.x) - log2(f.y))
# vecInf = is.infinite(tmpRatio) | is.na(tmpRatio)
#
# tmpRatio[vecInf] <- 0
tmpRatio
}
integrate(integrand,-Inf,Inf,x = x,y = y, stop.on.error=FALSE)$value
}
s_vector <- unique(df_2ph$sujeto)
d <- lapply(s_vector,function(k){
df.s <- df_2ph[df_2ph$sujeto == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph,function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 3 & lQ > 3){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(s = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
diff(dsum$kld)
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width = 0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Baseline","Experimental"))+
scale_y_continuous(breaks = seq(-1,2.5,.5),
expand = c(0,0),
labels = every_nth(seq(-1,2.5,.5),2,T,F))+
expand_limits(y = c(-0.5,2.5)) +
scale_color_manual(name ="",values = col_param2,
labels=c("Baseline" = "Baseline","Experimental" = "Experimental"))+
scale_fill_manual(name ="",values = fill_param2,
labels = c("Baseline" = "Baseline","Experimental" = "Experimental"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P} || \\textit{Q})$'))
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width=0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Training","Yoked"))+
# scale_y_continuous(breaks = seq(-1,2.5,.5),
#                    labels = every_nth(seq(-1,2.5,.5),2,T,F))+
# expand_limits(y = c(0,1.5)) +
scale_color_manual(name ="",values = col_param,
labels=c("training" = "Training","yoked" = "Yoked"))+
scale_fill_manual(name ="",values = fill_param,
labels = c("training" = "Training","yoked" = "Yoked"))+
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P_{Yoked} } || \\textit{ P_{Tandem}})\\, (bits)$'))
ggplot(d %>% na.omit(), aes(x = phase, y = kld,
color = factor(phase),
fill = factor(phase))) +
geom_jitter(width=0.2,
shape = 21,
size = 1.5,
stroke = 0.4) +
geom_crossbar(data = dsum, aes(ymin = kld, ymax = kld),
size = 0.3,col = "black", width = .5) +
scale_x_discrete(labels = c("Training","Yoked"))+
# scale_y_continuous(breaks = seq(-1,2.5,.5),
#                    labels = every_nth(seq(-1,2.5,.5),2,T,F))+
# expand_limits(y = c(0,1.5)) +
labs(x = "Phase") +
ylab(TeX('$ D_{KL}(\\textit{P_{Yoked} } || \\textit{ P_{Tandem}})\\, (bits)$')) +
theme(
axis.line = element_line(colour = "black",size = 0.3),
axis.ticks = element_line(colour = 'black',size = 0.2),
legend.key = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key.size = unit(0.5, "cm"),
legend.background = element_blank(),
axis.title.x = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 12,
margin = unit(c(t = 2.5, r = 0, b = 0, l = 0), "mm")),
axis.title.y = element_text(size = 10, face = "bold"),
axis.text.y = element_text(size = 9,
margin = unit(c(t = 0, r = 2.5, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-1, "mm"),
plot.margin=margin(0.5, 2, 0.1, 0.1, "cm"),
panel.background = element_blank(),
axis.text = element_text(colour = "black"),
legend.position = 'none'
)
kld_d = function(x,y,...){
integrand = function(x,y,t){
denx = density(x, na.rm = T)
deny = density(y, na.rm = T)
f.x =  approx(denx$x,denx$y,t)$y
f.y =  approx(deny$x,deny$y,t)$y
tmpRatio = f.x *(log2(f.x) - log2(f.y))
tmpRatio = ifelse(is.infinite(tmpRatio),0,ifelse(is.na(tmpRatio),0,tmpRatio))
tmpRatio
}
integrate(integrand,-Inf,Inf,x = x,y = y,stop.on.error=FALSE)$value
}
df_BL <- peak_Baseline %>%
group_by(sujeto, sesion, cde, trial) %>%
filter(sum(evento == 1) > 9 |
sum(evento == 11) > 9,
cum_dt <= 180,
cum_trial <= 30)
df_EXP <- peak_Experimental %>%
group_by(sujeto, sesion, cde, trial) %>%
filter(sum(evento == 1) > 9 |
sum(evento == 11) > 9,
cum_dt <= 180,
cum_trial <= 30)
df_2ph <- bind_rows(df_BL, df_EXP)
s_vector <- unique(df_2ph$sujeto)
d <- lapply(s_vector,function(k){
df.s <- df_2ph[df_2ph$sujeto == k, ]
v_ph <- unique(df.s$phase)
phse <- lapply(v_ph,function(f){
df.s.f <- df.s[df.s$phase == f,]
ses <- unique(df.s.f$sesion)
sesion <- lapply(ses, function(s){
df.s.f.s <- df.s.f[df.s.f$sesion == s,]
P <- df.s.f.s$cum_dt[df.s.f.s$evento == 1]
Q <- df.s.f.s$cum_dt[df.s.f.s$evento == 11]
# Length of nonzero bins
lP = length(P[P > 0])
lQ = length(Q[Q > 0])
if(lP > 6 & lQ > 6){
kld.s <- kld_d(P,Q)
} else {
kld.s <- NA
}
data.frame(s = k,kld = kld.s,sesion = s,phase = f)
}
) %>% bind_rows()
sesion
}
) %>% bind_rows()
phse
}
) %>% bind_rows()
d %<>% arrange(phase)
dsum <- d %>% group_by(phase) %>% summarise(kld = median(kld,na.rm = T))
dsum
diff(dsum$kld)
wilcox.test(d$kld ~ d$phase)
install.packages("pastecs")
install.packages("psych")
library("nlme")
library("pastecs")
library("dplyr")
library("psych")
datos = d
baseline <- lme(kld ~ phase, random = ~1|s/sesion, data = datos, method = "ML", na.action = na.omit)#
summary(baseline)
by(datos, datos$phase, stat.desc)
baseline
plot(baseline)
View(d)
summary(baseline)
ss <- lme(kld ~ phase, random = ~1|s, data = datos, method = "ML", na.action = na.omit)
summarise(ss)
summary(ss)
summary(baseline)
summary(ss)
sses <- lme(kld ~ phase, random = ~1|sesion, data = datos, method = "ML", na.action = na.omit)
summary(baseline)
summary(ss)
summary(sses)
none <- lme(kld ~ phase, random = ~1|1, data = datos, method = "ML", na.action = na.omit)
none <- lm(kld ~ phase, data = datos, na.action = na.omit)
AIC(baseline, ss, sses, none)
BIC
BIC(baseline, ss, sses, none)
summary(none)
summary(baseline)
summary(ss)
summary(sses)
summary(none)
AIC(baseline, ss, sses, none)
BIC(baseline, ss, sses, none)
df_p = pooled_ind_ana_km_df(
list_ss = subjects_vec,
paths = paths,
sessions = 8,
max_trials = 30
) %>%
as.data.frame()
